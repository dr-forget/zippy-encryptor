name: Build and Release Node Addon

on:
  workflow_dispatch:

env:
  PACKAGE_DIR: zippy-encyptor

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            platform: win32
            arch: ia32
            target: i686-pc-windows-msvc
          - os: macos-latest
            platform: darwin
            arch: x64
            target: x86_64-apple-darwin
          - os: macos-latest
            platform: darwin
            arch: arm64
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            platform: linux
            arch: x64
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            platform: android
            arch: arm
            target: armv7-linux-androideabi
          - os: ubuntu-latest
            platform: android
            arch: arm64
            target: aarch64-linux-android

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          cache: "npm"

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross toolchain (Linux ARM)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install cross toolchain (Android ARM)
        if: matrix.target == 'armv7-linux-androideabi'
        run: sudo apt-get update && sudo apt-get install -y gcc-arm-linux-gnueabihf

      - name: Install dependencies
        run: npm ci

      - name: Build native addon
        run: |
          npx napi build --release --platform --target ${{ matrix.target }}

      - name: Run additional build scripts
        run: |
          node build.js
          node convert.js

      - name: Copy built .node file to output directory (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p ${{ env.PACKAGE_DIR }}
          find ./ -name "*.node" -exec cp {} ${{ env.PACKAGE_DIR }}/ \;

      - name: Copy built .node file to output directory (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          mkdir %PACKAGE_DIR%
          for /R %%i in (*.node) do copy "%%i" %PACKAGE_DIR%\

      - name: Rename .node file with platform info
        shell: bash
        run: |
          cd ${{ env.PACKAGE_DIR }}
          file=$(find . -name "*.node" | head -n1)
          name="encryptor.${{ matrix.platform }}-${{ matrix.arch }}.node"
          mv "$file" "$name"
          ls -la

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: encryptor-${{ matrix.platform }}-${{ matrix.arch }}
          path: ${{ env.PACKAGE_DIR }}/
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Read version from package.json
        id: version
        run: |
          echo "VERSION=$(jq -r .version zippy-encyptor/package.json)" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create release directory
        run: mkdir -p release

      - name: Collect .node files
        run: |
          find artifacts -name "*.node" -exec cp {} release/ \;
          echo "Release contents:"
          ls -la release

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: v${{ steps.version.outputs.VERSION }}
          files: release/*.node
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
