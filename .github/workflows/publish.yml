name: Build and Publish Node Addon

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            platform: linux
            arch: arm
            target: armv7-unknown-linux-gnueabihf
          - os: macos-latest
            platform: darwin
            arch: x64
            target: x86_64-apple-darwin
          - os: macos-latest
            platform: darwin
            arch: arm64
            target: aarch64-apple-darwin
          - os: windows-latest
            platform: win32
            arch: x64
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            platform: win32
            arch: ia32
            target: i686-pc-windows-msvc
          - os: ubuntu-latest
            platform: android
            arch: arm64
            target: aarch64-linux-android
          - os: ubuntu-latest
            platform: android
            arch: arm
            target: armv7-linux-androideabi

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          cache: "npm"

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Install cross-compilation toolchain for aarch64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install cross-compilation toolchain for armv7
        if: matrix.target == 'armv7-unknown-linux-gnueabihf'
        run: sudo apt-get update && sudo apt-get install -y gcc-arm-linux-gnueabihf

      - name: Install dependencies
        run: npm ci

      - name: Build native addon for specific target
        run: npx napi build --platform --release --target ${{ matrix.target }}

      - name: Run additional build scripts
        run: |
          node build.js
          node convert.js

      - name: Create output directory
        run: mkdir -p zippy-encryptor
        shell: bash

      - name: Handle .node files for non-Windows platforms
        if: matrix.os != 'windows-latest'
        run: |
          for file in *.node; do
            if [ -f "$file" ]; then
              cp "$file" "zippy-encryptor/$file"
              echo "NODE_FILENAME=$file" >> $GITHUB_ENV
            fi
          done
        shell: bash

      - name: Handle .node files for Windows
        if: matrix.os == 'windows-latest'
        run: |
          for %%i in (*.node) do (
            copy "%%i" "zippy-encryptor\"
            echo NODE_FILENAME=%%~nxi>> %GITHUB_ENV%
          )
        shell: cmd

      - name: List files in zippy-encryptor directory (before upload)
        run: |
          echo "Files in zippy-encryptor directory:"
          if [ "$RUNNER_OS" == "Windows" ]; then
            dir zippy-encryptor
          else
            ls -la zippy-encryptor/
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.NODE_FILENAME || format('node-addon-{0}-{1}', matrix.platform, matrix.arch) }}
          path: zippy-encryptor/
          retention-days: 7
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

      - name: Upload version
        run: |
          cd zippy-encryptor
          npm version patch
          pnpm version patch

      - name: Setup .npmrc for publish
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >  ~/.npmrc

      - name: Get version from zippy-encyptor/package.json & publish
        id: get_version
        run: |
          npm publish --access public
          VERSION=$(jq -r '.version' zippy-encyptor/package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Tag the commit with release version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"]
          git add .
          git commit -m "chore: update version to ${{ env.latest_release }}"  # 提交更新
          git push
          git tag ${{ env.package_version }}  # 为提交添加 release 版本标签
          git push origin ${{ env.package_version }}  # 推送标签到远程

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: |
            ## Release Notes
            - Version: ${{ env.VERSION }}
          files: |
            zippy-encryptor/*.node
